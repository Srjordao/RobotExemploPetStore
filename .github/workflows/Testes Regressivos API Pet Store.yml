name: Testes Regressivos API Pet Store

permissions:
  issues: write

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
  schedule:
    - cron: "0 * * * *"

jobs:
  create_issue_on_failure:
    name: Criar Issue se Testes Falharem
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install --upgrade setuptools
          pip install allure-robotframework
          pip install robotframework-faker
          pip install robotframework-jsonlibrary
          pip install robotframework-jsonschemalibrary
          pip install robotframework-jsonvalidator
          pip install robotframework-metrics
          pip install robotframework-requests
          pip install robotframework-xvfb
          pip install robotframework-pythonlibcore
          pip install pyyaml
          pip install beautifulsoup4

      - name: Run Robot Framework tests
        run: |
          robot -d output/allure --listener allure_robotframework "tests"
        continue-on-error: true  # Continua o fluxo mesmo se falhar

      - name: Extract Failed Test Details
        run: |
          python extract_failures.py output/output.xml > output/failed_tests.txt
        id: extract_failures

  create-issue:
    name: Criar Issue para Testes Falhados
    needs: create_issue_on_failure
    runs-on: ubuntu-latest
    steps:
      - name: Check if any tests failed
        id: check-failures
        run: echo "failure=$(grep -c 'FAIL' output/failed_tests.txt)" >> $GITHUB_ENV

      - name: Create Issue for Failed Tests
        if: ${{ env.failure != 0 }}
        run: |
          TITLE="Test Failures Detected"
          BODY=$(cat output/failed_tests.txt)
          echo "Creating issue with title: $TITLE"
          gh api -X POST repos/${{ github.repository }}/issues \
            -f title="$TITLE" \
            -f body="$BODY" \
            -f labels="bug"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish Allure Report as Artifact
        uses: actions/upload-artifact@v2
        with:
          name: allure-report
          path: output/allure

  hourly_job:
    name: Hourly Job
    runs-on: ubuntu-latest
    steps:
      - name: Print Current Time
        run: echo "The current time is $(date)"