name: Testes Regressivos com Robot Framework

permissions:
  issues: write

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  run_robot_tests:
    name: Rodar Testes e Criar Issue se Falhar
    runs-on: ubuntu-latest
    steps:
      - name: Checkout código
        uses: actions/checkout@v2

      - name: Configurar Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Instalar dependências
        run: |
          pip install --upgrade pip
          pip install robotframework
          pip install robotframework-requests

      - name: Rodar Testes com Robot Framework
        run: |
          robot -d output tests/
        continue-on-error: true

      - name: Criar Issue se Testes Falharem
        if: always()  # Sempre executa, independentemente do sucesso ou falha
        uses: actions/github-script@v3
        with:
          script: |
            const fs = require('fs');
            const path = require('path');

            // Configuração dos detalhes da issue
            const issueTitle = `Testes falharam em ${context.workflow} - ${new Date().toISOString()}`;
            
            // Lendo o log HTML
            const logHtmlPath = path.join(process.env.GITHUB_WORKSPACE, 'output', 'allure', 'log.html');
            const logContent = fs.existsSync(logHtmlPath) ? fs.readFileSync(logHtmlPath, 'utf8') : 'Log de erro não encontrado.';

            // Filtrar todas as ocorrências de "fail"
            const failMatches = logContent.match(/.*fail.*/gi);  // Captura linhas com "fail" (case-insensitive)
            const failText = failMatches ? failMatches.join('\n') : 'Nenhum erro encontrado.';

            // Criar corpo da issue com os detalhes dos erros
            const issueBody = `
              ## Detalhes do Erro

              **Logs contendo "fail":**
              \`\`\`
              ${failText.slice(0, 10000)}  // Limitar a 10000 caracteres para não sobrecarregar a issue
              \`\`\`

              **Ação:** Verifique os logs acima para identificar e corrigir os problemas.
            `;

            // Criar a issue no repositório
            await github.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: issueTitle,
              body: issueBody,
              labels: ['bug', 'automated test failure'],
            });
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Publicar Relatório do Robot como Artefato
        uses: actions/upload-artifact@v2
        with:
          name: robot-framework-report
          path: output/